function materializeStuff(){let n=document.querySelectorAll("#absenceWindow, #overtimeWindow, #userWindow");$(n).addClass("no-autoinit");let t=document.querySelectorAll("#absenceWindow #dateFrom, #absenceWindow #dateTo, #overtimeWindow #date");$(t).addClass("no-autoinit");let i=document.querySelectorAll("#absenceWindow #timeFrom, #absenceWindow #timeTo");$(i).addClass("no-autoinit");materializeBuilder(M.Modal,n,{onCloseStart:n=>{n.querySelector("form").reset(),document.querySelectorAll(".field-validation-error").forEach(n=>{n.innerHTML=""})}});materializeBuilder(M.Datepicker,t,{format:"dd.mm.yyyy",firstDay:1,showDaysInNextAndPreviousMonths:!0,container:"body",i18n:{cancel:"Abbrechen",done:"Ok",months:["Januar","Februar","MÃ¤rz","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],monthsShort:["Jan","Feb","Mar","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"],weekdays:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],weekdaysShort:["So","Mo","Di","Mi","Do","Fr","Sa"],weekdaysAbbrev:["S","M","D","M","D","F","S"]},onSelect:n=>{switch(n.getUTCDay()){case 6:$("#overtimeForm select").val($("#overtimeForm option")[2].value);break;case 5:$("#overtimeForm select").val($("#overtimeForm option")[1].value);break;default:$("#overtimeForm select").val($("#overtimeForm option")[0].value)}$("#overtimeForm select").formSelect()}});M.AutoInit()}function materializeBuilder(n,t,i){t.forEach(t=>{n.init(t,i)})}function writeOwnTimesTables(n,t){$("#OwnTimes tbody tr").remove();$.ajax({url:`/OwnTimes?last30days=${n}&selectedUser=${t}`,success:n=>{let t=document.querySelectorAll("#OwnTimes tbody")[0],i=document.querySelectorAll("#OwnTimes tbody")[1];n[0].forEach(n=>{let i=t.insertRow(t.rows.length),r=0;i.insertCell(r).appendChild(document.createTextNode(new Date(n.absentFrom).toLocaleString("de-CH")));i.insertCell(++r).appendChild(document.createTextNode(new Date(n.absentTo).toLocaleString("de-CH")));i.insertCell(++r).appendChild(document.createTextNode(n.reason));let u=$(`<label><input name="isIO" data-id-absence="${n.idAbsence}" type="checkbox" class="filled-in" disabled /><span></span></label>`);n.approved&&(u=$(`<label><input name="isIO" data-id-absence="${n.idAbsence}" type="checkbox" class="filled-in" checked disabled /><span></span></label>`));i.insertCell(++r).appendChild(u[0]);let f=$(`<div><button type="button" class="btn-small" onclick="absenceEdit ('${n.id}')">
<i class="material-icons">edit</i>
</button>
<button type="button" class="btn-small" onclick="absenceDelete('${n.id}')">
<i class="material-icons">delete</i>
</button></div>`);i.insertCell(++r).appendChild(f[0])});n[1].forEach(n=>{let t=i.insertRow(i.rows.length),r=0;t.insertCell(r).appendChild(document.createTextNode(new Date(n.o.date).toLocaleDateString("de-CH")));t.insertCell(++r).appendChild(document.createTextNode(n.o.customer));t.insertCell(++r).appendChild(document.createTextNode(n.o.hours));t.insertCell(++r).appendChild(document.createTextNode(n.od.rate));let u=$(`<div><button type="button" class="btn-small" onclick="overtimeEdit ('${n.o.id}')">
<i class="material-icons">edit</i>
</button>
<button type="button" class="btn-small" onclick="overtimeDelete('${n.o.id}')">
<i class="material-icons">delete</i>
</button></div>`);t.insertCell(++r).appendChild(u[0])});$("#absencesRemaining").html(Math.round((n[2][1]-n[2][0]+n[3]/8.5)*100)/100);$("#doneOvertimes").html(n[3])}})}function writeControllingTable(n){$("#Controlling tbody tr").remove();$.ajax({url:"/Controlling?uncheckedOnly="+n,success:n=>{let t=document.querySelector("#Controlling tbody");n.forEach(n=>{let i=t.insertRow(t.rows.length),r=0;i.insertCell(r).appendChild(document.createTextNode(n.name));i.insertCell(++r).appendChild(document.createTextNode(new Date(n.absentFrom).toLocaleString("de-CH")));i.insertCell(++r).appendChild(document.createTextNode(new Date(n.absentTo).toLocaleString("de-CH")));i.insertCell(++r).appendChild(document.createTextNode(n.reason));let u=$(`<label><input name="isIO" data-id-absence="${n.idAbsence}" type="checkbox" class="filled-in" /><span></span></label>`);n.approved&&(u=$(`<label><input name="isIO" data-id-absence="${n.idAbsence}" type="checkbox" class="filled-in" checked /><span></span></label>`));i.insertCell(++r).appendChild(u[0])})}})}function absenceEdit(n){$.ajax({url:"/OwnTimes?handler=Absence&id="+n,success:n=>{let t=$.parseJSON(n);$('#absenceWindow input[name="Absence.AbsenceDateFrom"]').val(t.AbsenceDateFrom);$('#absenceWindow input[name="Absence.FromAfternoon"]:eq(0)').prop("checked",!t.FromAfternoon);$('#absenceWindow input[name="Absence.FromAfternoon"]:eq(1)').prop("checked",t.FromAfternoon);$('#absenceWindow input[name="Absence.AbsenceDateTo"]').val(t.AbsenceDateTo);$('#absenceWindow input[name="Absence.ToAfternoon"]:eq(0)').prop("checked",!t.ToAfternoon);$('#absenceWindow input[name="Absence.ToAfternoon"]:eq(1)').prop("checked",t.ToAfternoon);$('#absenceWindow input[name="Absence.Negative"]').prop("checked",t.Negative);let i=$('#absenceWindow input[name="Absence.Reason"]').filter(`[value='${t.OtherReason}']`);i.length>0?$(i[0]).prop("checked",!0):($('#absenceWindow input[name="Absence.Reason"]').last().prop("checked",!0),$('#absenceWindow input[name="Absence.OtherReason"]').val(t.OtherReason));$('#absenceWindow input[name="Absence.Approved"]').prop("checked",t.Approved);$('#absenceWindow input[name="Absence.ID"]').val(t.ID);$("#absenceWindow").modal("open")}})}function overtimeEdit(n){$("#overtimeWindow").modal("open");$.ajax({url:"/OwnTimes?handler=Overtime&id="+n,success:n=>{let i=$("#overtimeWindow input"),t=$.parseJSON(n);$(i[0]).val(t.Date);$(i[1]).val(t.Hours);$(i[2]).val(t.Customer);$(i[4]).val(t.Approved);$("#overtimeWindow select").find(`option[value="${t.IdOvertimeDetail.toUpperCase()}"]`).prop("selected",!0);$("#overtimeWindow select").formSelect();$(i[5]).val(t.ID)}})}function absenceDelete(n){$.ajax({url:"/OwnTimes?handler=Absence&id="+n,method:"DELETE",beforeSend:n=>{n.setRequestHeader("XSRF-TOKEN",$('input:hidden[name="__RequestVerificationToken"]').val())},success:()=>{location.reload()}})}function overtimeDelete(n){$.ajax({url:"/OwnTimes?handler=Overtime&id="+n,method:"DELETE",beforeSend:n=>{n.setRequestHeader("XSRF-TOKEN",$('input:hidden[name="__RequestVerificationToken"]').val())},success:()=>{location.reload()}})}function writeUsersTable(n){$("#Users tbody tr").remove();$.ajax({url:"/Users?onlyActive="+n,success:n=>{let t=document.querySelector("#Users tbody");n.forEach(n=>{let i=t.insertRow(t.rows.length),r=0;i.insertCell(r).appendChild(document.createTextNode(n.username));i.insertCell(++r).appendChild(document.createTextNode(n.firstname));i.insertCell(++r).appendChild(document.createTextNode(n.lastname));i.insertCell(++r).appendChild(document.createTextNode(n.department));let u=$(`<div><button type="button" class="btn-small" onclick="userEdit ('${n.id}')">
<i class="material-icons">edit</i>
</button>
<button type="button" class="btn-small" onclick="userDelete('${n.id}')">
<i class="material-icons">delete</i>
</button></div>`);i.insertCell(++r).appendChild(u[0])})},error:()=>{alert("An error has occured")}})}function userEdit(n){$("#userWindow").modal("open");$.ajax({url:"/Users?id="+n,success:n=>{let i=$("#userWindow input"),t=$.parseJSON(n);$(i[0]).val(t.Username);$(i[2]).val(t.Firstname);$(i[3]).val(t.Lastname);$("#userWindow select:eq(0)").find(`option[value="${t.Department}"]`).prop("selected",!0);$("#userWindow select:eq(0)").formSelect();$(i[5]).val(t.Holidays);$(i[6]).prop("checked",t.Deactivated);$("#userWindow select:eq(1)").find(`option[value="${t.IdPermission.toUpperCase()}"]`).prop("selected",!0);$("#userWindow select:eq(1)").formSelect();$(i[8]).val(t.ID)}})}function userDelete(n){$.ajax({url:"/Users?id="+n,method:"DELETE",beforeSend:n=>{n.setRequestHeader("XSRF-TOKEN",$('input:hidden[name="__RequestVerificationToken"]').val())},success:()=>{location.reload()}})}$(document).ready(()=>{materializeStuff()});